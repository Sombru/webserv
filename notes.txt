    htons(uint16_t hostshort): Converts a 16-bit number from host byte order to network byte order.

    htonl(uint32_t hostlong): Converts a 32-bit number from host to network byte order.

    ntohs(uint16_t netshort): Converts a 16-bit number from network to host byte order.

    ntohl(uint32_t netlong): Converts a 32-bit number from network to host byte order.

üßµ Multiplexing I/O

    select(): Monitors multiple file descriptors for readiness (read/write/exception).

    poll(): Similar to select(), but uses pollfd structures ‚Äî scales better with many fds.

    epoll_create(): Creates an epoll instance (Linux only).

    epoll_ctl(): Controls an epoll instance (add, modify, remove file descriptors).

    epoll_wait(): Waits for I/O events on an epoll instance.

    kqueue(): BSD/macOS equivalent to epoll ‚Äî creates a new kernel event queue.

    kevent(): Registers or retrieves events from a kqueue.

üß© Sockets & Communication

    socket(): Creates an endpoint for communication (returns a socket descriptor).

    socketpair(): Creates a pair of connected sockets (often used for IPC).

    accept(): Accepts an incoming connection on a socket (returns new socket fd).

    listen(): Listens for incoming connections on a socket.

    send(): Sends data through a connected socket.

    recv(): Receives data from a connected socket.

    bind(): Binds a socket to an IP/port.

    connect(): Initiates a connection on a socket to a remote address.

    setsockopt(): Sets options for sockets (like timeout, reuseaddr, etc).

    getsockname(): Gets the current address to which the socket is bound.

    getprotobyname(): Returns a protocol structure for a given protocol name (e.g. "tcp").

üåê DNS & Address Resolution

    getaddrinfo(): Resolves hostnames and service names to socket addresses.

    freeaddrinfo(): Frees the memory allocated by getaddrinfo.

üìÅ Filesystem / Directory Operations

    chdir(const char *path): Changes the current working directory.

    access(const char *pathname, int mode): Checks file accessibility (read, write, execute).

    opendir(const char *name): Opens a directory stream.

    readdir(DIR *dirp): Reads the next entry in a directory stream.

    closedir(DIR *dirp): Closes a directory stream.

‚öôÔ∏è File Descriptor Control

    fcntl(int fd, int cmd, ...): Manipulates file descriptor properties (e.g., set non-blocking).